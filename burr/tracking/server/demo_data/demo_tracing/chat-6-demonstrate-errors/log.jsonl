{"type":"begin_entry","start_time":"2024-05-04T22:54:29.525069","action":"prompt","inputs":{"prompt":"Please draw a giraffe."},"sequence_id":0}
{"type":"begin_span","start_time":"2024-05-04T22:54:29.525301","action_sequence_id":0,"span_id":"0:0","span_name":"process_prompt","parent_span_id":null,"span_dependencies":[]}
{"type":"end_span","end_time":"2024-05-04T22:54:29.525375","action_sequence_id":0,"span_id":"0:0"}
{"type":"end_entry","end_time":"2024-05-04T22:54:29.525538","action":"prompt","result":{"chat_item":{"role":"user","content":"Please draw a giraffe.","type":"text"}},"exception":null,"state":{"chat_history":[{"role":"user","content":"Please draw a giraffe.","type":"text"}],"__SEQUENCE_ID":0,"prompt":"Please draw a giraffe.","__PRIOR_STEP":"prompt"},"sequence_id":0}
{"type":"begin_entry","start_time":"2024-05-04T22:54:29.525699","action":"check_safety","inputs":{},"sequence_id":1}
{"type":"begin_span","start_time":"2024-05-04T22:54:29.525768","action_sequence_id":1,"span_id":"1:0","span_name":"check_safety","parent_span_id":null,"span_dependencies":[]}
{"type":"end_span","end_time":"2024-05-04T22:54:29.525807","action_sequence_id":1,"span_id":"1:0"}
{"type":"end_entry","end_time":"2024-05-04T22:54:29.525905","action":"check_safety","result":{"safe":true},"exception":null,"state":{"chat_history":[{"role":"user","content":"Please draw a giraffe.","type":"text"}],"__SEQUENCE_ID":1,"prompt":"Please draw a giraffe.","__PRIOR_STEP":"check_safety","safe":true},"sequence_id":1}
{"type":"begin_entry","start_time":"2024-05-04T22:54:29.526060","action":"decide_mode","inputs":{},"sequence_id":2}
{"type":"begin_span","start_time":"2024-05-04T22:54:29.526179","action_sequence_id":2,"span_id":"2:0","span_name":"generate_prompt","parent_span_id":null,"span_dependencies":[]}
{"type":"end_span","end_time":"2024-05-04T22:54:29.526279","action_sequence_id":2,"span_id":"2:0"}
{"type":"begin_span","start_time":"2024-05-04T22:54:29.526303","action_sequence_id":2,"span_id":"2:1","span_name":"query_openai","parent_span_id":null,"span_dependencies":["generate_prompt"]}
{"type":"begin_span","start_time":"2024-05-04T22:54:29.526325","action_sequence_id":2,"span_id":"2:1.0","span_name":"create_openai_client","parent_span_id":"2:1","span_dependencies":[]}
{"type":"end_span","end_time":"2024-05-04T22:54:29.533213","action_sequence_id":2,"span_id":"2:1.0"}
{"type":"begin_span","start_time":"2024-05-04T22:54:29.533265","action_sequence_id":2,"span_id":"2:1.1","span_name":"query_openai","parent_span_id":"2:1","span_dependencies":[]}
{"type":"end_span","end_time":"2024-05-04T22:54:29.689462","action_sequence_id":2,"span_id":"2:1.1"}
{"type":"end_span","end_time":"2024-05-04T22:54:29.689854","action_sequence_id":2,"span_id":"2:1"}
{"type":"end_entry","end_time":"2024-05-04T22:54:29.697797","action":"decide_mode","result":null,"exception":"Traceback (most recent call last):\n  File \"/Users/elijahbenizzy/dev/dagworks/os/burr/burr/core/application.py\", line 375, in _step\n    raise e\n  File \"/Users/elijahbenizzy/dev/dagworks/os/burr/burr/core/application.py\", line 363, in _step\n    result, new_state = _run_single_step_action(next_action, self._state, action_inputs)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/elijahbenizzy/dev/dagworks/os/burr/burr/core/application.py\", line 220, in _run_single_step_action\n    result, new_state = action.run_and_update(state, **inputs)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/elijahbenizzy/dev/dagworks/os/burr/burr/core/action.py\", line 442, in run_and_update\n    return self._fn(state, **self._bound_params, **run_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/elijahbenizzy/dev/dagworks/os/burr/examples/tracing-and-spans/application.py\", line 52, in choose_mode\n    result = client.chat.completions.create(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/elijahbenizzy/.pyenv/versions/3.11/envs/burr-3-11/lib/python3.11/site-packages/openai/_utils/_utils.py\", line 271, in wrapper\n    return func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/elijahbenizzy/.pyenv/versions/3.11/envs/burr-3-11/lib/python3.11/site-packages/openai/resources/chat/completions.py\", line 659, in create\n    return self._post(\n           ^^^^^^^^^^^\n  File \"/Users/elijahbenizzy/.pyenv/versions/3.11/envs/burr-3-11/lib/python3.11/site-packages/openai/_base_client.py\", line 1180, in post\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/elijahbenizzy/.pyenv/versions/3.11/envs/burr-3-11/lib/python3.11/site-packages/openai/_base_client.py\", line 869, in request\n    return self._request(\n           ^^^^^^^^^^^^^^\n  File \"/Users/elijahbenizzy/.pyenv/versions/3.11/envs/burr-3-11/lib/python3.11/site-packages/openai/_base_client.py\", line 960, in _request\n    raise self._make_status_error_from_response(err.response) from None\nopenai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: fake. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}\n","state":{"chat_history":[{"role":"user","content":"Please draw a giraffe.","type":"text"}],"__SEQUENCE_ID":2,"prompt":"Please draw a giraffe.","__PRIOR_STEP":"check_safety","safe":true},"sequence_id":2}
